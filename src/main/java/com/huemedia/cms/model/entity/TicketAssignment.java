package com.huemedia.cms.model.entity;


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * TicketAssignment generated by hbm2java
 */
@Entity
@Table(name="ticket_assignment"
)
public class TicketAssignment  implements java.io.Serializable {


     private Integer id;
     private Status status;
     private Group group;
     private Ticket ticket;
     private TicketGroup ticketGroup;
     private Unit unit;
     private Integer supervisorId;
     private Integer assigneeId;
     private Date assignDate;
     private Date responseDate;
     private Date lastStatusUpdate;
     private Date resolutionDate;
     private Integer duration;
     private String caseInterval;
     private String createBy;
     private Date createDate;
     private String updateBy;
     private Date updateDate;
     private Set<TicketActivity> ticketActivities = new HashSet<TicketActivity>(0);

    public TicketAssignment() {
    }

    public TicketAssignment(Status status, Group group, Ticket ticket, TicketGroup ticketGroup, Unit unit, Integer supervisorId, Integer assigneeId, Date assignDate, Date responseDate, Date lastStatusUpdate, Date resolutionDate, Integer duration, String caseInterval, String createBy, Date createDate, String updateBy, Date updateDate, Set<TicketActivity> ticketActivities) {
       this.status = status;
       this.group = group;
       this.ticket = ticket;
       this.ticketGroup = ticketGroup;
       this.unit = unit;
       this.supervisorId = supervisorId;
       this.assigneeId = assigneeId;
       this.assignDate = assignDate;
       this.responseDate = responseDate;
       this.lastStatusUpdate = lastStatusUpdate;
       this.resolutionDate = resolutionDate;
       this.duration = duration;
       this.caseInterval = caseInterval;
       this.createBy = createBy;
       this.createDate = createDate;
       this.updateBy = updateBy;
       this.updateDate = updateDate;
       this.ticketActivities = ticketActivities;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="id", unique=true, nullable=false)
    public Integer getId() {
        return this.id;
    }
    
    public void setId(Integer id) {
        this.id = id;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="status")
    public Status getStatus() {
        return this.status;
    }
    
    public void setStatus(Status status) {
        this.status = status;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="group_id")
    public Group getGroup() {
        return this.group;
    }
    
    public void setGroup(Group group) {
        this.group = group;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="ticket_id")
    public Ticket getTicket() {
        return this.ticket;
    }
    
    public void setTicket(Ticket ticket) {
        this.ticket = ticket;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="ticket_group")
    public TicketGroup getTicketGroup() {
        return this.ticketGroup;
    }
    
    public void setTicketGroup(TicketGroup ticketGroup) {
        this.ticketGroup = ticketGroup;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="unit_id")
    public Unit getUnit() {
        return this.unit;
    }
    
    public void setUnit(Unit unit) {
        this.unit = unit;
    }

    
    @Column(name="supervisor_id")
    public Integer getSupervisorId() {
        return this.supervisorId;
    }
    
    public void setSupervisorId(Integer supervisorId) {
        this.supervisorId = supervisorId;
    }

    
    @Column(name="assignee_id")
    public Integer getAssigneeId() {
        return this.assigneeId;
    }
    
    public void setAssigneeId(Integer assigneeId) {
        this.assigneeId = assigneeId;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="assign_date", length=19)
    public Date getAssignDate() {
        return this.assignDate;
    }
    
    public void setAssignDate(Date assignDate) {
        this.assignDate = assignDate;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="response_date", length=19)
    public Date getResponseDate() {
        return this.responseDate;
    }
    
    public void setResponseDate(Date responseDate) {
        this.responseDate = responseDate;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="last_status_update", length=19)
    public Date getLastStatusUpdate() {
        return this.lastStatusUpdate;
    }
    
    public void setLastStatusUpdate(Date lastStatusUpdate) {
        this.lastStatusUpdate = lastStatusUpdate;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="resolution_date", length=19)
    public Date getResolutionDate() {
        return this.resolutionDate;
    }
    
    public void setResolutionDate(Date resolutionDate) {
        this.resolutionDate = resolutionDate;
    }

    
    @Column(name="duration")
    public Integer getDuration() {
        return this.duration;
    }
    
    public void setDuration(Integer duration) {
        this.duration = duration;
    }

    
    @Column(name="case_interval", length=100)
    public String getCaseInterval() {
        return this.caseInterval;
    }
    
    public void setCaseInterval(String caseInterval) {
        this.caseInterval = caseInterval;
    }

    
    @Column(name="create_by", length=50)
    public String getCreateBy() {
        return this.createBy;
    }
    
    public void setCreateBy(String createBy) {
        this.createBy = createBy;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="create_date", length=19)
    public Date getCreateDate() {
        return this.createDate;
    }
    
    public void setCreateDate(Date createDate) {
        this.createDate = createDate;
    }

    
    @Column(name="update_by", length=50)
    public String getUpdateBy() {
        return this.updateBy;
    }
    
    public void setUpdateBy(String updateBy) {
        this.updateBy = updateBy;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="update_date", length=19)
    public Date getUpdateDate() {
        return this.updateDate;
    }
    
    public void setUpdateDate(Date updateDate) {
        this.updateDate = updateDate;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="ticketAssignment")
    public Set<TicketActivity> getTicketActivities() {
        return this.ticketActivities;
    }
    
    public void setTicketActivities(Set<TicketActivity> ticketActivities) {
        this.ticketActivities = ticketActivities;
    }




}


