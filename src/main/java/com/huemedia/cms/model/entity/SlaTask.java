package com.huemedia.cms.model.entity;


import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * SlaTask generated by hbm2java
 */
@Entity
@Table(name="sla_task"
)
public class SlaTask  implements java.io.Serializable {


     private Integer id;
     private Ticket ticket;
     private Sla sla;
     private Date nextReminder;
     private Date nextTrigger;
     private Integer count;
     private String status;
     private String createBy;
     private Date createDate;
     private String updateBy;
     private Date updateDate;

    public SlaTask() {
    }

    public SlaTask(Ticket ticket, Sla sla, Date nextReminder, Date nextTrigger, Integer count, String status, String createBy, Date createDate, String updateBy, Date updateDate) {
       this.ticket = ticket;
       this.sla = sla;
       this.nextReminder = nextReminder;
       this.nextTrigger = nextTrigger;
       this.count = count;
       this.status = status;
       this.createBy = createBy;
       this.createDate = createDate;
       this.updateBy = updateBy;
       this.updateDate = updateDate;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="id", unique=true, nullable=false)
    public Integer getId() {
        return this.id;
    }
    
    public void setId(Integer id) {
        this.id = id;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="ticket_id")
    public Ticket getTicket() {
        return this.ticket;
    }
    
    public void setTicket(Ticket ticket) {
        this.ticket = ticket;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="sla_id")
    public Sla getSla() {
        return this.sla;
    }
    
    public void setSla(Sla sla) {
        this.sla = sla;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="next_reminder", length=19)
    public Date getNextReminder() {
        return this.nextReminder;
    }
    
    public void setNextReminder(Date nextReminder) {
        this.nextReminder = nextReminder;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="next_trigger", length=19)
    public Date getNextTrigger() {
        return this.nextTrigger;
    }
    
    public void setNextTrigger(Date nextTrigger) {
        this.nextTrigger = nextTrigger;
    }

    
    @Column(name="count")
    public Integer getCount() {
        return this.count;
    }
    
    public void setCount(Integer count) {
        this.count = count;
    }

    
    @Column(name="status", length=20)
    public String getStatus() {
        return this.status;
    }
    
    public void setStatus(String status) {
        this.status = status;
    }

    
    @Column(name="create_by", length=50)
    public String getCreateBy() {
        return this.createBy;
    }
    
    public void setCreateBy(String createBy) {
        this.createBy = createBy;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="create_date", length=19)
    public Date getCreateDate() {
        return this.createDate;
    }
    
    public void setCreateDate(Date createDate) {
        this.createDate = createDate;
    }

    
    @Column(name="update_by", length=50)
    public String getUpdateBy() {
        return this.updateBy;
    }
    
    public void setUpdateBy(String updateBy) {
        this.updateBy = updateBy;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="update_date", length=19)
    public Date getUpdateDate() {
        return this.updateDate;
    }
    
    public void setUpdateDate(Date updateDate) {
        this.updateDate = updateDate;
    }




}


