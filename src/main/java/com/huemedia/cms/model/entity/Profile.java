package com.huemedia.cms.model.entity;


import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * Profile generated by hbm2java
 */
@Entity
@Table(name="profile"
    , uniqueConstraints = @UniqueConstraint(columnNames="ic_no") 
)
public class Profile  implements java.io.Serializable {


     private Integer id;
     private Plan plan;
     private Country country;
     private PersonCategory personCategory;
     private Relation relation;
     private Region region;
     private State state;
     private String name;
     private String email;
     private String icNo;
     private String settlerNo;
     private String staffNo;
     private String company;
     private String address1;
     private String address2;
     private String city;
     private String phoneNo;
     private String mobileNo;
     private String faxNo;
     private byte[] photo;
     private Set<Ticket> tickets = new HashSet<Ticket>(0);
     private Set<User> users = new HashSet<User>(0);
     private Set<StaffGroup> staffGroups = new HashSet<StaffGroup>(0);

    public Profile() {
    }

    public Profile(Plan plan, Country country, PersonCategory personCategory, Relation relation, Region region, State state, String name, String email, String icNo, String settlerNo, String staffNo, String company, String address1, String address2, String city, String phoneNo, String mobileNo, String faxNo, byte[] photo, Set<Ticket> tickets, Set<User> users, Set<StaffGroup> staffGroups) {
       this.plan = plan;
       this.country = country;
       this.personCategory = personCategory;
       this.relation = relation;
       this.region = region;
       this.state = state;
       this.name = name;
       this.email = email;
       this.icNo = icNo;
       this.settlerNo = settlerNo;
       this.staffNo = staffNo;
       this.company = company;
       this.address1 = address1;
       this.address2 = address2;
       this.city = city;
       this.phoneNo = phoneNo;
       this.mobileNo = mobileNo;
       this.faxNo = faxNo;
       this.photo = photo;
       this.tickets = tickets;
       this.users = users;
       this.staffGroups = staffGroups;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="id", unique=true, nullable=false)
    public Integer getId() {
        return this.id;
    }
    
    public void setId(Integer id) {
        this.id = id;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="plan_id")
    public Plan getPlan() {
        return this.plan;
    }
    
    public void setPlan(Plan plan) {
        this.plan = plan;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="country")
    public Country getCountry() {
        return this.country;
    }
    
    public void setCountry(Country country) {
        this.country = country;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="person_category")
    public PersonCategory getPersonCategory() {
        return this.personCategory;
    }
    
    public void setPersonCategory(PersonCategory personCategory) {
        this.personCategory = personCategory;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="relation_id")
    public Relation getRelation() {
        return this.relation;
    }
    
    public void setRelation(Relation relation) {
        this.relation = relation;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="region_id")
    public Region getRegion() {
        return this.region;
    }
    
    public void setRegion(Region region) {
        this.region = region;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="state")
    public State getState() {
        return this.state;
    }
    
    public void setState(State state) {
        this.state = state;
    }

    
    @Column(name="name", length=200)
    public String getName() {
        return this.name;
    }
    
    public void setName(String name) {
        this.name = name;
    }

    
    @Column(name="email", length=50)
    public String getEmail() {
        return this.email;
    }
    
    public void setEmail(String email) {
        this.email = email;
    }

    
    @Column(name="ic_no", unique=true, length=14)
    public String getIcNo() {
        return this.icNo;
    }
    
    public void setIcNo(String icNo) {
        this.icNo = icNo;
    }

    
    @Column(name="settler_no", length=20)
    public String getSettlerNo() {
        return this.settlerNo;
    }
    
    public void setSettlerNo(String settlerNo) {
        this.settlerNo = settlerNo;
    }

    
    @Column(name="staff_no", length=20)
    public String getStaffNo() {
        return this.staffNo;
    }
    
    public void setStaffNo(String staffNo) {
        this.staffNo = staffNo;
    }

    
    @Column(name="company", length=200)
    public String getCompany() {
        return this.company;
    }
    
    public void setCompany(String company) {
        this.company = company;
    }

    
    @Column(name="address1", length=100)
    public String getAddress1() {
        return this.address1;
    }
    
    public void setAddress1(String address1) {
        this.address1 = address1;
    }

    
    @Column(name="address2", length=100)
    public String getAddress2() {
        return this.address2;
    }
    
    public void setAddress2(String address2) {
        this.address2 = address2;
    }

    
    @Column(name="city", length=100)
    public String getCity() {
        return this.city;
    }
    
    public void setCity(String city) {
        this.city = city;
    }

    
    @Column(name="phone_no", length=20)
    public String getPhoneNo() {
        return this.phoneNo;
    }
    
    public void setPhoneNo(String phoneNo) {
        this.phoneNo = phoneNo;
    }

    
    @Column(name="mobile_no", length=20)
    public String getMobileNo() {
        return this.mobileNo;
    }
    
    public void setMobileNo(String mobileNo) {
        this.mobileNo = mobileNo;
    }

    
    @Column(name="fax_no", length=20)
    public String getFaxNo() {
        return this.faxNo;
    }
    
    public void setFaxNo(String faxNo) {
        this.faxNo = faxNo;
    }

    
    @Column(name="photo")
    public byte[] getPhoto() {
        return this.photo;
    }
    
    public void setPhoto(byte[] photo) {
        this.photo = photo;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="profile")
    public Set<Ticket> getTickets() {
        return this.tickets;
    }
    
    public void setTickets(Set<Ticket> tickets) {
        this.tickets = tickets;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="profile")
    public Set<User> getUsers() {
        return this.users;
    }
    
    public void setUsers(Set<User> users) {
        this.users = users;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="profile")
    public Set<StaffGroup> getStaffGroups() {
        return this.staffGroups;
    }
    
    public void setStaffGroups(Set<StaffGroup> staffGroups) {
        this.staffGroups = staffGroups;
    }




}


